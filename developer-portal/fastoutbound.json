{
  "openapi": "3.0.0",
  "info": {
    "title": "merchantbridge-merchant-api",
    "version": "v1",
    "contact": {
      "name": "Fast",
      "url": "https://fast.co",
      "email": "api@fast.co"
    },
    "description": "# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "paths": {
    "/fast/v1/create": {
      "post": {
        "summary": "Create a specified type of an object/entity",
        "description": "Generic create interface",
        "operationId": "MerchantService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1CreateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1CreateRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/fast/v1/delete": {
      "post": {
        "summary": "Delete the specified object/entity",
        "description": "Generic delete interface",
        "operationId": "MerchantService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1DeleteResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1DeleteRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/fast/v1/read": {
      "post": {
        "summary": "Get a specified type of an object/entity by provided id",
        "description": "This is a generic interface to read a specific type of an entity such as order, cart, ..)",
        "operationId": "MerchantService_Read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ReadResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1ReadRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "MerchantService"
        ]
      }
    },
    "/fast/v1/update": {
      "post": {
        "summary": "Update identified object/entity",
        "description": "Generic update interface",
        "operationId": "MerchantService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1UpdateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtimeError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1UpdateRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "MerchantService"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://private-api.fast.co/"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "FASTSESSION",
        "in": "header"
      }
    },
    "schemas": {
      "protobufAny": {
        "type": "object",
        "properties": {
          "type_url": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
          },
          "value": {
            "type": "string",
            "format": "byte",
            "description": "Must be a valid serialized protocol buffer of the above specified type."
          }
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
      },
      "runtimeError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "v1AddressUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city_locality": {
            "type": "string"
          },
          "state_province": {
            "type": "string"
          },
          "state_province_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          }
        }
      },
      "v1CartToOrderConvert": {
        "type": "string",
        "enum": [
          "CART_TO_ORDER_CONVERT_UNSPECIFIED",
          "CART_TO_ORDER_CONVERT_ONLY",
          "CART_TO_ORDER_CONVERT_UPDATE_AND_CONVERT"
        ],
        "default": "CART_TO_ORDER_CONVERT_UNSPECIFIED"
      },
      "v1CouponUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "remove": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      },
      "v1CreateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "app_id": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/v1CreateRequestSegment"
          },
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          }
        }
      },
      "v1CreateRequestSegment": {
        "type": "object",
        "properties": {
          "is_cart": {
            "type": "boolean",
            "format": "boolean"
          },
          "order": {
            "$ref": "#/components/schemas/v1FastOrder"
          }
        }
      },
      "v1CreateResponse": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1CreateResponseSegment"
          },
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          }
        }
      },
      "v1CreateResponseSegment": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/v1FastOrder"
          }
        }
      },
      "v1DeleteOrderRequestSegment": {
        "type": "object",
        "properties": {
          "is_cart": {
            "type": "boolean",
            "format": "boolean"
          },
          "order_id": {
            "$ref": "#/components/schemas/v1UUID"
          }
        }
      },
      "v1DeleteOrderResponseSegment": {
        "type": "object"
      },
      "v1DeleteRequest": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string"
          },
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1DeleteOrderRequestSegment"
          }
        }
      },
      "v1DeleteResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1DeleteOrderResponseSegment"
          }
        }
      },
      "v1DiscountOrigin": {
        "type": "string",
        "enum": [
          "DISCOUNT_ORIGIN_UNSPECIFIED",
          "DISCOUNT_ORIGIN_USER",
          "DISCOUNT_ORIGIN_FAST",
          "DISCOUNT_ORIGIN_VENDOR"
        ],
        "default": "DISCOUNT_ORIGIN_UNSPECIFIED",
        "title": "- DISCOUNT_ORIGIN_UNSPECIFIED: Discounts can be originated from many sources"
      },
      "v1DiscountType": {
        "type": "string",
        "enum": [
          "DISCOUNT_TYPE_UNSPECIFIED",
          "DISCOUNT_TYPE_MISC",
          "DISCOUNT_TYPE_REGULAR",
          "DISCOUNT_TYPE_SHIPPING",
          "DISCOUNT_TYPE_HANDLING",
          "DISCOUNT_TYPE_WRAPPING"
        ],
        "default": "DISCOUNT_TYPE_UNSPECIFIED"
      },
      "v1EntityType": {
        "type": "string",
        "enum": [
          "ENTITY_TYPE_UNSPECIFIED",
          "ENTITY_TYPE_ORDER",
          "ENTITY_TYPE_SHIPPING_OPTION"
        ],
        "default": "ENTITY_TYPE_UNSPECIFIED"
      },
      "v1FastOrder": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "order_type": {
            "$ref": "#/components/schemas/v1OrderType"
          },
          "currency_code": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/v1OrderStatus"
          },
          "bill_to": {
            "$ref": "#/components/schemas/v1OrderAddress"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderLine"
            }
          },
          "shipment_plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderShipmentPlan"
            }
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderDiscount"
            }
          },
          "total_amount": {
            "type": "string"
          },
          "sub_total": {
            "type": "string"
          },
          "total_discounts": {
            "type": "string"
          },
          "total_tax": {
            "type": "string"
          },
          "total_shipping": {
            "type": "string"
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderRefund"
            }
          },
          "custom_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderCustomValue"
            }
          },
          "user_note": {
            "type": "string"
          },
          "store_note": {
            "type": "string"
          },
          "fast_note": {
            "type": "string"
          }
        }
      },
      "v1ItemFulfillmentModel": {
        "type": "string",
        "enum": [
          "ITEM_FULFILLMENT_MODEL_UNSPECIFIED",
          "ITEM_FULFILLMENT_MODEL_PHYSICAL",
          "ITEM_FULFILLMENT_MODEL_DIGITAL",
          "ITEM_FULFILLMENT_MODEL_SERVICE"
        ],
        "default": "ITEM_FULFILLMENT_MODEL_UNSPECIFIED"
      },
      "v1OrderAddress": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address_1": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "city_locality": {
            "type": "string"
          },
          "state_province": {
            "type": "string"
          },
          "state_province_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          }
        }
      },
      "v1OrderCustomValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "v1OrderDiscount": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin": {
            "$ref": "#/components/schemas/v1DiscountOrigin"
          },
          "type": {
            "$ref": "#/components/schemas/v1DiscountType"
          },
          "applied": {
            "type": "boolean",
            "format": "boolean"
          },
          "total_amount": {
            "type": "string"
          }
        }
      },
      "v1OrderItemUpdate": {
        "type": "object",
        "properties": {
          "item_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "quantity": {
            "type": "string",
            "format": "int64"
          },
          "external_product_id": {
            "type": "string"
          },
          "external_variant_id": {
            "type": "string"
          },
          "external_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderCustomValue"
            }
          },
          "customizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderCustomValue"
            }
          }
        }
      },
      "v1OrderLine": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_id": {
            "type": "string"
          },
          "external_product_id": {
            "type": "string"
          },
          "external_variant_id": {
            "type": "string"
          },
          "external_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderCustomValue"
            }
          },
          "customizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderCustomValue"
            }
          },
          "quantity": {
            "type": "string",
            "format": "uint64"
          },
          "quantity_fulfilled": {
            "type": "string",
            "format": "uint64"
          },
          "unit_price": {
            "type": "string"
          },
          "discounted_unit_price": {
            "type": "string"
          },
          "line_discount_amount": {
            "type": "string"
          },
          "subtotal_amount": {
            "type": "string"
          },
          "tax_amount": {
            "type": "string"
          },
          "total_amount": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderDiscount"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "fulfillment_mode": {
            "$ref": "#/components/schemas/v1ItemFulfillmentModel"
          }
        }
      },
      "v1OrderLineReference": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "quantity": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "v1OrderRefund": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_id": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "use_original_method": {
            "type": "boolean",
            "format": "boolean"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderLineReference"
            }
          },
          "refund_date": {
            "type": "string",
            "format": "uint64"
          },
          "amount": {
            "type": "string"
          },
          "tax": {
            "type": "string"
          },
          "shipping": {
            "type": "string"
          }
        }
      },
      "v1OrderShipmentPlan": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_id": {
            "type": "string"
          },
          "ship_to": {
            "$ref": "#/components/schemas/v1OrderAddress"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderLineReference"
            }
          },
          "selected_option": {
            "$ref": "#/components/schemas/v1ShippingOption"
          },
          "available_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ShippingOption"
            }
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Shipment"
            }
          }
        }
      },
      "v1OrderStatus": {
        "type": "string",
        "enum": [
          "ORDER_STATUS_UNSPECIFIED",
          "ORDER_STATUS_CART",
          "ORDER_STATUS_PENDING",
          "ORDER_STATUS_HOLD",
          "ORDER_STATUS_BOOKED",
          "ORDER_STATUS_PENDING_FULFILLMENT",
          "ORDER_STATUS_FULFILLED",
          "ORDER_STATUS_COMPLETE",
          "ORDER_STATUS_CANCELED",
          "ORDER_STATUS_DELETED"
        ],
        "default": "ORDER_STATUS_UNSPECIFIED",
        "title": "- ORDER_STATUS_UNSPECIFIED: Order and Cart share the same data model, this status means that Order is in Cart status\nthis status will be populated on all Fast Carts"
      },
      "v1OrderType": {
        "type": "string",
        "enum": [
          "ORDER_TYPE_UNSPECIFIED",
          "ORDER_TYPE_CART",
          "ORDER_TYPE_ORDER",
          "ORDER_TYPE_RETURN",
          "ORDER_TYPE_EXCHANGE",
          "ORDER_TYPE_CREDIT",
          "ORDER_TYPE_REFUND"
        ],
        "default": "ORDER_TYPE_UNSPECIFIED"
      },
      "v1ReadOrderRequestSegment": {
        "type": "object",
        "properties": {
          "is_cart": {
            "type": "boolean",
            "format": "boolean"
          },
          "order_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_order_id": {
            "type": "string"
          }
        }
      },
      "v1ReadOrderResponseSegment": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/v1FastOrder"
          }
        }
      },
      "v1ReadRequest": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string"
          },
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1ReadOrderRequestSegment"
          },
          "shipping_option": {
            "$ref": "#/components/schemas/v1ReadShippingOptionRequestSegment"
          }
        }
      },
      "v1ReadResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1ReadOrderResponseSegment"
          },
          "shipping_option": {
            "$ref": "#/components/schemas/v1ReadShippingOptionResponseSegment"
          }
        }
      },
      "v1ReadShippingOptionRequestSegment": {
        "type": "object"
      },
      "v1ReadShippingOptionResponseSegment": {
        "type": "object"
      },
      "v1Shipment": {
        "type": "object",
        "properties": {
          "carrier": {
            "type": "string"
          },
          "tracking_number": {
            "type": "string"
          },
          "estimated_delivery_date": {
            "type": "string",
            "format": "uint64"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderLineReference"
            }
          }
        }
      },
      "v1ShipmentPlanUpdate": {
        "type": "object",
        "properties": {
          "plan_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "ship_to": {
            "$ref": "#/components/schemas/v1OrderAddress"
          },
          "line_refs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderLineReference"
            }
          }
        }
      },
      "v1ShippingOption": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shipment_type": {
            "$ref": "#/components/schemas/v1ShippingOptionType"
          },
          "cost": {
            "type": "string"
          },
          "tax": {
            "type": "string"
          },
          "total": {
            "type": "string"
          },
          "carrier": {
            "type": "string"
          },
          "service_level": {
            "type": "string"
          }
        }
      },
      "v1ShippingOptionType": {
        "type": "string",
        "enum": [
          "SHIPPING_OPTION_TYPE_UNSPECIFIED",
          "SHIPPING_OPTION_TYPE_IN_STORE_PICKUP",
          "SHIPPING_OPTION_TYPE_OTHER"
        ],
        "default": "SHIPPING_OPTION_TYPE_UNSPECIFIED"
      },
      "v1ShippingOptionUpdate": {
        "type": "object",
        "properties": {
          "plan_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "option_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "external_option_id": {
            "type": "string"
          }
        }
      },
      "v1UUID": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "title": "UUID value"
          }
        },
        "title": "Typed UUID",
        "required": [
          "value"
        ]
      },
      "v1UpdateOrderRequestSegment": {
        "type": "object",
        "properties": {
          "order_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "is_cart": {
            "type": "boolean",
            "format": "boolean"
          },
          "convert_mode": {
            "$ref": "#/components/schemas/v1CartToOrderConvert"
          },
          "convert_cart_to_order": {
            "type": "boolean",
            "format": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/v1OrderStatus"
          },
          "bill_to": {
            "$ref": "#/components/schemas/v1AddressUpdate"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1OrderItemUpdate"
            }
          },
          "coupon": {
            "$ref": "#/components/schemas/v1CouponUpdate"
          },
          "shipping_option": {
            "$ref": "#/components/schemas/v1ShippingOptionUpdate"
          },
          "user_info": {
            "$ref": "#/components/schemas/v1UserUpdate"
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ShipmentPlanUpdate"
            }
          }
        }
      },
      "v1UpdateOrderResponseSegment": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/v1FastOrder"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1UpdateOrderStatus"
            }
          }
        }
      },
      "v1UpdateOrderStatus": {
        "type": "object",
        "properties": {
          "updated": {
            "$ref": "#/components/schemas/v1UpdateType"
          },
          "status": {
            "type": "boolean",
            "format": "boolean"
          },
          "reason_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "v1UpdateRequest": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string"
          },
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1UpdateOrderRequestSegment"
          }
        }
      },
      "v1UpdateResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/v1UUID"
          },
          "type": {
            "$ref": "#/components/schemas/v1EntityType"
          },
          "order": {
            "$ref": "#/components/schemas/v1UpdateOrderResponseSegment"
          }
        }
      },
      "v1UpdateType": {
        "type": "string",
        "enum": [
          "UPDATE_TYPE_UNSPECIFIED"
        ],
        "default": "UPDATE_TYPE_UNSPECIFIED"
      },
      "v1UserUpdate": {
        "type": "object",
        "properties": {
          "external_customer_id": {
            "type": "string"
          }
        }
      }
    }
  }
}