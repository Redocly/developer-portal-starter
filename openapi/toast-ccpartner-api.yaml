---
swagger: '2.0'
info:
  title: Toast Credit Cards API
  description: |
    A simple, single request, synchronous API to allow partners to
    authorize credit card transactions associated with an orders API
    order.
  version: 1.0.0
schemes:
  - http
host: toast-api-server
produces:
  - application/json
basePath: /ccpartner/v1
contact: Toast developer support

paths:
  /merchants/{merchantUuid}/payments/{paymentUuid}:
    put:
      operationId: merchantsMerchantUuidpaymentsPaymentUuidPut
      summary: Authorize a credit card
      description: |
        Authorize a credit card payment. Funds will be held until the
        payment is voided or captured.
        
        You must submit an orders API request to apply the payment to a
        check within five minutes of authorization, otherwise the
        payment will be automatically voided.
        
        Payment must be captured within four days of authorization,
        otherwise the payment will be automatically voided. Capture
        occurs the evening after the order is fulfilled by the
        restaurant.
      parameters:
        - name: merchantUuid
          in: path
          type: string
          description: |
            The Toast GUID of the merchant (restaurant) that will
            receive the payment. This is the same value as the
            Toast-Restaurant-External-ID.
          required: true
        - name: paymentUuid
          in: path
          type: string
          description: |
            The unique identifier (UID) of this authorization,
            generated by the restaurant organization or integration
            partner.
          required: true
        - name: Toast-Restaurant-External-ID
          in: header
          type: string
          description: |
            The GUID of the restaurant used as the context of the request.
          required: true
        - name: paymentAuthorization
          in: body
          description: The authorization request, including encrypted
            credit card information and payment details.
          schema:
            $ref: '#/definitions/PaymentAuthorization'
          required: true
      responses:
        '200':
          description: The authorization request was processed. See the
            response for details.
          schema:
            $ref: '#/definitions/PaymentStatus'
        '400':
          description: The request was not valid. A required field may
            be missing.
          schema:
            $ref: '#/definitions/ToastError'
        '404':
          description: The merchant (restaurant) does not exist.
          schema:
            $ref: '#/definitions/ToastError'
        '409':
          description: |
            An authorization request was already made for this payment
            UUID. Verify that you are generating unique payment UUIDs
            for each request.  This can also occur if the same request
            is resubmitted, but the state has since been changed by
            another system (for example, voided on the POS).
          schema:
            $ref: '#/definitions/ToastError'
        '422':
          description: |
            The request failed validation. The structure is not
            correct. A message with more information is returned if
            using the certification environment.
          schema:
            $ref: '#/definitions/ToastError'
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/ToastError'
definitions:
  ToastError:
    title: Error Detail
    description: Contains error details.
    type: object
    properties:
      description:
        type: string
        description: A human-readable description of the problem.
      detail:
        type: string
        description: Error details, such as an exception and stack trace.
    required: ["description"]
  PaymentStatus:
    title: Payment Status
    description: Status of a payment.
    type: object
    required: 
      - paymentState
    properties:
      paymentState:
        type: string
        enum: 
          - AUTHORIZED
          - DENIED
        description: |
          The state of the payment. Toast may add values to this field.
          Make sure that your implementation can handle additional
          values.
      authorizationMetadata:
        $ref: '#/definitions/AuthorizationMetadata'
      amount:
        description: The amount of this payment, not including tip.
        type: object
      tipAmount:
        description: The tip amount of this payment.
        type: object
      denialReason:
        description: The reason a payment was denied. This must be
          displayed to the consumer.
        type: string
      error:
        type: string
        description: If the payment is in an error state, this will contain the error.
  AuthorizationMetadata:
    title: Payment Authorization Metadata
    description: |
      Additional details about a payment, typically displayed on a receipt
      and logged by the partner.
    type: object
    required:
      - localTransactionDate
      - cardBrand
      - authorizationCode
      - last4
    properties:
      localTransactionDate:
        type: string
        format: date-time
        description: |
          A copy of the `localTransactionDate` provided by the partner, in ISO 8601 format.
      cardBrand:
        type: string
        description: The brand of the credit card. For example, AMEX,
          Discover, Visa, or Mastercard.
      authorizationCode:
        type: string
        description: |
          A code generated by card processing networks upon accepting an
          authorization request.
      last4:
        type: string
        description: |
          The final four digits of the credit card number.
  PartnerServiceInfo:
    title: Requesting Endpoint Information
    required:
      - instanceId
    description: |
      Information about the client that made the payment request. This
      information can be used for troubleshooting problems.
    type: object
    properties:
      instanceId:
        type: string
        description: |
          An identifier for the client that made the authorization
          request. For example, this might be a partner service
          instance ID that is visible in log messages.
      additionalInfo:
        type: string
        description: |
          Additional information about the service. For example, this
          might be a JSON structure containing the IP address and
          service version.
  PaymentRequestMetadata:
    title: Payment Request Metadata
    description: Metadata about the request being made.
    type: object
    required:
      - partnerServiceInfo
      - localTransactionDate
      - originIPAddr
      #- cardFirst6         # These will be required tentatively after June 2020
      #- cardLast4
      #- billingAddress
      #- guestIdentifier
    properties:
      partnerServiceInfo:
        $ref: '#/definitions/PartnerServiceInfo'
      localTransactionDate:
        type: string
        format: date-time
        description: |
          The date and time, in ISO 8601 format, when the consumer made the payment request.
      originIPAddr:
        type: string
        description: The public ipv4 or ipv6 address of the cardholder making the payment.
      cardFirst6:
        type: string
        description: |
          The first six digits of the credit card number. The first six
          digits are the bank identification number (BIN) for the card.
          Must exactly match that provided in the encrypted card data.
      cardLast4:
        type: string
        description: |
          The last four digits of the credit card number. Must exactly
          match that provided in the encrypted card data.
      billingAddress:
        $ref: '#/definitions/BillingAddress'
      deliveryAddress:
        $ref: '#/definitions/DeliveryAddress'
      userAgent:
        type: string
        description: |
          For payments taken through a browser, the browser's user agent string.
      guestIdentifier:
        type: string
        description: |
          A stable identifier for the guest making the payment. This may be, for instance,
          an email address or a UUID. Must consist of the following characters:
          `a-z, A-Z, 0-9, =, ., -, _, +, @, :, &, ^, %, !, $`
      guestEmail:
        type: string
        description: |
          The email address of the guest placing the payment.
      appName:
        type: string
        description: |
          A company-specific name for the mobile app (if any) the payment is made through.
          For instance, use 'MyCompany Android App' instead of 'Android App'
      appVersion:
        type: string
        description: |
          The version of the mobile app (if any) the payment is made through.
          You can use any string to represent the app version. There are no
          format or content requirements.
  PaymentAuthorization:
    title: Payment Authorization Request
    description: A request to authorize a credit card payment.
    type: object
    required: 
      - cardNumberOrigin
      - willSaveCard
      - encryptedCardData
      - amount
      - tipAmount
      - requestMetadata
      - keyId
    properties:
      cardNumberOrigin:
        type: string
        enum: 
          - END_USER
          - PARTNER_VAULT
        description: |
          The way that the credit card was provided for the payment
          request. The value is `END_USER` if the cardholder entered
          the card number (PAN) as part of a web order. The value is
          `PARTNER_VAULT` if the PAN was retrieved from a vault
          controlled by the integration partner.

          This value is used with `willSaveCard` to report information 
          about stored credit card numbers to credit card provider 
          networks. If your organization is using stored credit card 
          information for a credit card authorization, this value must 
          be `PARTNER_VAULT`. The default value is `END_USER`.
      willSaveCard:
        type: boolean
        description: |
          Indicates whether your organization will save the restaurant 
          guests' credit card information for future use.

          Toast reports information about stored credit card information 
          to some credit card providers. This "card on file" or "stored 
          credentials" reporting is required by some credit card provider 
          networks. These networks may impose fees for non-compliance 
          with "card on file" reporting requirements.

          Note that integration partners are responsible for any and 
          all fees incurred, and must comply with all applicable law 
          and rules relevant to, "card on file" consent, storage, use 
          and reporting requirements in accordance with card brand 
          regulations and the integration partner agreement.
      encryptedCardData:
        type: object
        description: |
          A base64-encoded version of the encrypted card data payload.
          For information about encrypting and encoding credit card
          information, see the <cite>Toast API Developer's
          Guide</cite>.
      amount:
        type: number
        format: double
        description: |
          The check price that should be charged to the credit card,
          not including the tip. For example, the value `10.00`
          represents ten USD and zero cents. The `amount` must not be
          negative. The total of the `amount` value and the `tipAmount`
          value must be greater than zero.
      keyId:
        type: string
        description: |
          The identifier of the encryption key and algorithm used 
          to encrypt the credit card data. Toast integration support 
          provides this identifier along with the encryption key 
          itself. If you received an encryption key before June 2018,
          you may omit this field. For all API users, supplying a
          keyId value prevents downtime during key rotations.
      tipAmount:
        type: number
        format: double
        description: |
          The tip that should be charged to the credit card. For
          example, the value `1.00` represents one USD and zero cents.
          The tip amount must not be negative. The total of the `amount`
          value and the `tipAmount` value must be greater than zero.
      requestMetadata:
        $ref: '#/definitions/PaymentRequestMetadata'
  BillingAddress:
    title: Billing Address
    description: |
      An international billing address including name and phone number.
      A `BillingAddress` object for a `PaymentRequestMetadata` `billingAddress`
      value must exactly match address information you provide in encrypted
      credit card data.
    type: object
    required:
      - postalCode
      - country
    properties:
      name:
        type: string
        description: |
          The name attached to the billing address. This is not necessarily
          the same as the name on the card.
      phone:
        type: string
        description: |
          The phone number associated with the account in [E.164 format](https://www.itu.int/rec/T-REC-E.164).
      address1:
        type: string
        description: Line 1 of the address
      address2:
        type: string
        description: Line 2 of the address
      city:
        type: string
        description: City of the address
      region:
        type: string
        description: Region or state of the address
      postalCode:
        type: string
        description: |
          Postal or ZIP code. If using a code with an extra four digits,
          for example a US ZIP+4 code, do not separate the extra digits.
          For example, `123451234`.
      country:
        type: string
        description: Country code using the ISO 3166-1 alpha-3 standard
  DeliveryAddress:
    title: A generic international delivery address.
    description: |
      A generic international delivery address including name and phone number.
    type: object
    required:
      - address1
      - city
      - region
      - postalCode
      - country
    properties:
      name:
        type: string
        description: |
          The name associated with the address.
      phone:
        type: string
        description: |
          The phone number associated with the account in [E.164 format](https://www.itu.int/rec/T-REC-E.164).
      address1:
        type: string
        description: Line 1 of the address
      address2:
        type: string
        description: Line 2 of the address
      city:
        type: string
        description: City of the address
      region:
        type: string
        description: Region or state of the address
      postalCode:
        type: string
        description: |
          Postal or ZIP code. If using a code with an extra four digits,
          for example a US ZIP+4 code, do not separate the extra digits.
          For example, `123451234`.
      country:
        type: string
        description: Country code using the ISO 3166-1 alpha-3 standard
